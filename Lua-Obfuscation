local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/ionlyusegithubformcmods/1-Line-Scripts/main/Mobile%20Friendly%20Orion')))()

local Window = OrionLib:MakeWindow({Name = "Public bathroom Hub", HidePremium = true, IntroEnabled = false, SaveConfig = false, ConfigFolder = "OrionTest"})

local Tab = Window:MakeTab({
	Name = "Main",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

Tab:AddDropdown({
	Name = "Multi items",
	Default = "Multi roll",
	Options = {"Multi Roll", "Multi Burger", "Multi Pizza", "Multi Coffee", "Multi Soda", "Multi Spray Bottle","Multi Mop","Multi Soap","Multi Newspaper","Multi Cheese"},
	Callback = function(Value)
		if Value == "Multi Roll" then
		local LP = game.Players.LocalPlayer
repeat wait() until LP.Character
for i,v in pairs(LP.Backpack:GetChildren()) do
   if v.Name == "TpRoll" then
       v.Parent = LP.Character
   end
end
while true do
   wait()
   for i,v in pairs (LP.Character:GetChildren()) do
       if v.Name == "TpRoll" then
           v:Activate()
       end
   end
end
end
      if Value == "Multi Burger" then
      local LP = game.Players.LocalPlayer
repeat wait() until LP.Character
for i,v in pairs(LP.Backpack:GetChildren()) do
   if v.Name == "Burger" then
       v.Parent = LP.Character
   end
end
while true do
   wait(1)
   for i,v in pairs (LP.Character:GetChildren()) do
       if v.Name == "Burger" then
           v:Activate()
       end
   end
end
end
      if Value == "Multi Pizza" then
      local LP = game.Players.LocalPlayer
repeat wait() until LP.Character
for i,v in pairs(LP.Backpack:GetChildren()) do
   if v.Name == "Pizza" then
       v.Parent = LP.Character
   end
end
while true do
   wait(1)
   for i,v in pairs (LP.Character:GetChildren()) do
       if v.Name == "Pizza" then
           v:Activate()
       end
   end
end
end
     if Value == "Multi Coffee" then
     local LP = game.Players.LocalPlayer
repeat wait() until LP.Character
for i,v in pairs(LP.Backpack:GetChildren()) do
   if v.Name == "Coffee" then
       v.Parent = LP.Character
   end
end
while true do
   wait(1)
   for i,v in pairs (LP.Character:GetChildren()) do
       if v.Name == "Coffee" then
           v:Activate()
       end
   end
end
end
      if Value == "Multi Soda" then
      local LP = game.Players.LocalPlayer
repeat wait() until LP.Character
for i,v in pairs(LP.Backpack:GetChildren()) do
   if v.Name == "Soda" then
       v.Parent = LP.Character
   end
end
while true do
   wait(1)
   for i,v in pairs (LP.Character:GetChildren()) do
       if v.Name == "Soda" then
           v:Activate()
       end
   end
end
end
      if Value == "Multi Spray Bottle" then
      local LP = game.Players.LocalPlayer
repeat wait() until LP.Character
for i,v in pairs(LP.Backpack:GetChildren()) do
   if v.Name == "SprayBottle" then
       v.Parent = LP.Character
   end
end
while true do
   wait(1)
   for i,v in pairs (LP.Character:GetChildren()) do
       if v.Name == "SprayBottle" then
           v:Activate()
       end
   end
end
end
if Value == "Multi Mop" then
local LP = game.Players.LocalPlayer
repeat wait() until LP.Character
for i,v in pairs(LP.Backpack:GetChildren()) do
   if v.Name == "Mop" then
       v.Parent = LP.Character
   end
end
while true do
   wait()
   for i,v in pairs (LP.Character:GetChildren()) do
       if v.Name == "Mop" then
           v:Activate()
       end
   end
end
end
if Value == "Multi Soap" then
local LP = game.Players.LocalPlayer
repeat wait() until LP.Character
for i,v in pairs(LP.Backpack:GetChildren()) do
   if v.Name == "Soap" then
       v.Parent = LP.Character
   end
end
while true do
   wait()
   for i,v in pairs (LP.Character:GetChildren()) do
       if v.Name == "Soap" then
           v:Activate()
       end
   end
end
end
if Value == "Multi Newspaper" then
local LP = game.Players.LocalPlayer
repeat wait() until LP.Character
for i,v in pairs(LP.Backpack:GetChildren()) do
   if v.Name == "Newspaper" then
       v.Parent = LP.Character
   end
end
while true do
   wait()
   for i,v in pairs (LP.Character:GetChildren()) do
       if v.Name == "Newspaper" then
           v:Activate()
       end
   end
end
end
if Value == "Multi Cheese" then
local LP = game.Players.LocalPlayer
repeat wait() until LP.Character
for i,v in pairs(LP.Backpack:GetChildren()) do
   if v.Name == "Cheese" then
       v.Parent = LP.Character
   end
end
while true do
   wait()
   for i,v in pairs (LP.Character:GetChildren()) do
       if v.Name == "Cheese" then
           v:Activate()
       end
   end
end
end
	end    
})

Tab:AddDropdown({
	Name = "Multi gear",
	Default = "m",
	Options = {"Multi Roll (Press Z)", "Multi Soda (Press X)","Multi Burger (Press H)","Multi Pizza (Press J)","Multi Mop (Press R)","Multi Newspaper (Press O)","Multi gears (Press E)"},
	Callback = function(Value)
		if Value == "Multi Roll (Press Z)" then

end
        if Value == "Multi Roll (Press Z)" then
lp = game:GetService("Players").LocalPlayer

game:GetService("UserInputService").InputBegan:Connect(function(key)
    if key.KeyCode == Enum.KeyCode.Z then
        for i, tool in pairs(lp.Backpack:GetChildren()) do
            if tool:IsA("Tool") and tool.Name == "TpRoll" then
                tool.Parent = lp.Character
                tool:Activate()
                task.wait()
                tool.Parent = lp.Backpack
            end
        end
    end
end)
end
       if Value == "Multi Soda (Press X)" then
lp = game:GetService("Players").LocalPlayer

game:GetService("UserInputService").InputBegan:Connect(function(key)
    if key.KeyCode == Enum.KeyCode.X then
        for i, tool in pairs(lp.Backpack:GetChildren()) do
            if tool:IsA("Tool") and tool.Name == "Soda" then
                tool.Parent = lp.Character
                tool:Activate()
                task.wait()
                tool.Parent = lp.Backpack
            end
        end
    end
end)
end
      if Value == "Multi Burger (Press H)" then
lp = game:GetService("Players").LocalPlayer

game:GetService("UserInputService").InputBegan:Connect(function(key)
    if key.KeyCode == Enum.KeyCode.H then
        for i, tool in pairs(lp.Backpack:GetChildren()) do
            if tool:IsA("Tool") and tool.Name == "Burger" then
                tool.Parent = lp.Character
                tool:Activate()
                task.wait()
                tool.Parent = lp.Backpack
            end
        end
    end
end)
end
if Value == "Multi Pizza (Press J)" then
lp = game:GetService("Players").LocalPlayer

game:GetService("UserInputService").InputBegan:Connect(function(key)
    if key.KeyCode == Enum.KeyCode.J then
        for i, tool in pairs(lp.Backpack:GetChildren()) do
            if tool:IsA("Tool") and tool.Name == "Pizza" then
                tool.Parent = lp.Character
                tool:Activate()
                task.wait()
                tool.Parent = lp.Backpack
            end
        end
    end
end)
end
     if Value == "Multi Mop (Press R)" then
lp = game:GetService("Players").LocalPlayer

game:GetService("UserInputService").InputBegan:Connect(function(key)
    if key.KeyCode == Enum.KeyCode.R then
        for i, tool in pairs(lp.Backpack:GetChildren()) do
            if tool:IsA("Tool") and tool.Name == "Mop" then
                tool.Parent = lp.Character
                tool:Activate()
                task.wait()
                tool.Parent = lp.Backpack
            end
        end
    end
end)
end
     if Value == "Multi Newspaper (Press O)" then
lp = game:GetService("Players").LocalPlayer

game:GetService("UserInputService").InputBegan:Connect(function(key)
    if key.KeyCode == Enum.KeyCode.O then
        for i, tool in pairs(lp.Backpack:GetChildren()) do
            if tool:IsA("Tool") and tool.Name == "Newspaper" then
                tool.Parent = lp.Character
                tool:Activate()
                task.wait()
                tool.Parent = lp.Backpack
            end
        end
    end
end)
end
if Value == "Multi gears (Press E)" then
lp = game:GetService("Players").LocalPlayer

game:GetService("UserInputService").InputBegan:Connect(function(key)
	if key.KeyCode == Enum.KeyCode.E then
		for i,tool in pairs(lp.Backpack:GetChildren()) do
			if tool:IsA("Tool") then
				tool.Parent = lp.Character
				tool:Activate()
				task.wait()
				tool.Parent = lp.Backpack
			end
		end
	end
end)
end
	end    
})

Tab:AddDropdown({
	Name = "Tool parts giver",
	Default = "De",
	Options = {"Destroy parts", "Spin parts", "Wheel parts"},
	Callback = function(Value)
		if Value == "Destroy parts" then
		local lp = game.Players.LocalPlayer
local mouse = lp:GetMouse()

local ft = Instance.new("Tool")
ft.Name = "Destroy parts"
ft.RequiresHandle = false
ft.Parent = lp.Backpack
ft.Activated:Connect(function()
 local obj = mouse.Target
 if obj:IsA("BasePart") or obj:IsA("Part") or obj:IsA("MeshPart") or obj:IsA("CornerWedgePart") or obj:IsA("TrussPart") or obj:IsA("WedgePart") then
  if not obj.Anchored then
      local bambam = Instance.new("BodyAngularVelocity")
      bambam.Name = "BAM BAM AHAHHAHAHHAHAH"
      bambam.Parent = obj
      bambam.AngularVelocity = Vector3.new(99999999,99999999,99999999)
      bambam.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
      bambam.P = math.huge
     end
 end
end)
		end
		if Value == "Spin parts" then
		local lp = game.Players.LocalPlayer
local mouse = lp:GetMouse()

local ft = Instance.new("Tool")
ft.Name = "Spin parts"
ft.RequiresHandle = false
ft.Parent = lp.Backpack
ft.Activated:Connect(function()
 local obj = mouse.Target
 if obj:IsA("BasePart") or obj:IsA("Part") or obj:IsA("MeshPart") or obj:IsA("CornerWedgePart") or obj:IsA("TrussPart") or obj:IsA("WedgePart") then
  if not obj.Anchored then
      local bambam = Instance.new("BodyAngularVelocity")
      bambam.Name = "BAM BAM AHAHHAHAHHAHAH"
      bambam.Parent = obj
      bambam.AngularVelocity = Vector3.new(0,26,0)
      bambam.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
      bambam.P = math.huge
     end
 end
end)
end
        if Value == "Wheel parts" then
        local lp = game.Players.LocalPlayer
local mouse = lp:GetMouse()

local ft = Instance.new("Tool")
ft.Name = "Wheel parts"
ft.RequiresHandle = false
ft.Parent = lp.Backpack
ft.Activated:Connect(function()
 local obj = mouse.Target
 if obj:IsA("BasePart") or obj:IsA("Part") or obj:IsA("MeshPart") or obj:IsA("CornerWedgePart") or obj:IsA("TrussPart") or obj:IsA("WedgePart") then
  if not obj.Anchored then
      local bambam = Instance.new("BodyAngularVelocity")
      bambam.Name = "BAM BAM AHAHHAHAHHAHAH"
      bambam.Parent = obj
      bambam.AngularVelocity = Vector3.new(1,1,6)
      bambam.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
      bambam.P = math.huge
     end
 end
end)
		end
	end
})

Tab:AddButton({
	Name = "Equip tools",
	Callback = function()
      		for _, tool in ipairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
     if tool:IsA("Tool") then
          tool.Parent = game:GetService("Players").LocalPlayer.Character
     end
 end
  	end    
})

Tab:AddButton({
	Name = "Drop tools",
	Callback = function()
      		for i,v in pairs(game.Players.LocalPlayer.Backpack:GetDescendants()) do
   if v:IsA("Tool")  then
    game:GetService("RunService").RenderStepped:wait()
    v.Parent = game.Players.LocalPlayer.Character
    game:GetService("RunService").RenderStepped:wait()
    v.Parent = game.Workspace
end
end
  	end    
})

Tab:AddToggle({
 Name = "Spam sound",
 Default = fasle,
 Callback = function(Value)
  game:GetService("CoreGui").PurchasePrompt.Enabled = false
_G.Lag = Value
while _G.Lag do
for i,v in pairs(workspace:GetDescendants()) do
   if v:IsA("ClickDetector") then
    fireclickdetector(v)
   end
end
  wait(1)
  end
 end    
})

Tab:AddButton({
	Name = "Anti water",
	Callback = function()
		local player = game:GetService("Players").LocalPlayer
while task.wait() do
local parts = workspace:GetPartBoundsInRadius(player.Character:WaitForChild("HumanoidRootPart").Position, 10)
for _, part in ipairs(parts) do
part.CanTouch = fasle
end
end
	end    
})

Tab:AddButton({
 Name = "Telekinesis",
 Callback = function()
        loadstring(game:HttpGet(('https://raw.githubusercontent.com/SAZXHUB/Control-update/main/README.md'),true))()
   end    
})

Tab:AddButton({
 Name = "Flip player",
 Callback = function()
        game.Players:Chat("/e flip")
   end    
})

Tab:AddToggle({
	Name = "Bypass walkspeed",
	Default = false,
	Callback = function(Value)
getgenv().TpWalking = Value
getgenv().Speed = 2

local speaker = game:GetService("Players").LocalPlayer
local chr = speaker.Character
local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
local hb = game:GetService("RunService").Heartbeat
while getgenv().TpWalking and chr and hum and hum.Parent do
    local delta = hb:Wait()
    if hum.MoveDirection.Magnitude > 0 then
        chr:TranslateBy(hum.MoveDirection * tonumber(getgenv().Speed) * delta * 10)
    else
        chr:TranslateBy(hum.MoveDirection * delta * 100000)
    end
end
	end    
})

local Tab = Window:MakeTab({
	Name = "Misc",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

Tab:AddButton({
	Name = "Touch all",
	Callback = function()
      		local plr = game.Players.LocalPlayer.Character.Head
for i, v in pairs(game:GetService("Workspace"):GetDescendants()) do
        if v.Name == "TouchInterest" and v.Parent then
        firetouchinterest(plr, v.Parent, 0)
    end
end
  	end    
})

Tab:AddButton({
	Name = "Kill all npcs",
	Callback = function()
      		sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", 112412400000)
sethiddenproperty(game.Players.LocalPlayer, "MaxSimulationRadius", 112412400000)
for i,d in pairs(game.Workspace:GetDescendants()) do
    if d.ClassName == 'Humanoid' and d.Parent.Name ~= game.Players.LocalPlayer.Name then
        d.Health = 0
    end
end
  	end    
})

Tab:AddDropdown({
	Name = "Enable",
	Default = "E",
	Options = {"Enable reset", "Enable inventory", "Enable emotes", "Enable leaderboard", "Enable chat"},
	Callback = function(Value)
		if Value == "Enable reset" then
		local StarterGui = game:GetService("StarterGui")
StarterGui:SetCore("ResetButtonCallback",true)
end
       if Value == "Enable inventory" then
local StarterGui = game:GetService("StarterGui")
StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
end
      if Value == "Enable emotes" then
      game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.EmotesMenu, false)
      end
      if Value == "Enable leaderboard" then
      sgui = game:GetService("StarterGui")
sgui:SetCoreGuiEnabled(Enum.CoreGuiType.PlayerList, true)
end
      if Value == "Enable chat" then
      local sgui = game:GetService("StarterGui")
sgui:SetCoreGuiEnabled(Enum.CoreGuiType.Chat, true)
end
	end    
})

Tab:AddButton({
	Name = "Cbring",
	Callback = function()
      		local plr = game:GetService("Players").LocalPlayer
for i,v in pairs(game:GetService("Players"):GetChildren()) do
    if v.ClassName == "Player" and v.Name ~= plr.Name then
        if v.Character:FindFirstChild("HumanoidRootPart") then
            v.Character.HumanoidRootPart.CFrame = CFrame.new(plr.Character.HumanoidRootPart.Position)
        end
    end
end 
  	end    
})

Tab:AddToggle({
	Name = "Click all buttons",
	Default = false,
	Callback = function(Value)
		game:GetService("CoreGui").PurchasePrompt.Enabled = false
_G.Lag = Value
while _G.Lag do
for i,v in pairs(workspace:GetDescendants()) do
   if v:IsA("ClickDetector") then
    fireclickdetector(v)
   end
end
  wait(1)
  end
	end    
})

Tab:AddDropdown({
	Name = "Time set",
	Default = "s",
	Options = {"Day", "Night"},
	Callback = function(Value)
	       if Value == "Day" then
	game.Lighting.TimeOfDay = "12.00"
	end
	      if Value == "Night" then
	game.Lighting.TimeOfDay = "23.59"
	end
	end    
})

Tab:AddButton({
 Name = "Anti afk",
 Callback = function()
        loadstring(game:HttpGet("https://pastebin.com/raw/9QCyuc2p"))()
   end    
})
