local Console = Instance.new("ScreenGui")
Console.Name = 'Console'
Console.Parent = game.CoreGui

local button = Instance.new("TextButton")
button.Size = UDim2.new(0, 32, 0, 32)
button.Position = UDim2.new(0, 105, 0, -32)
button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
button.BackgroundTransparency = 0.5
button.Text = "Console"
button.TextColor3 = Color3.fromRGB(200, 200, 200)
button.Parent = Console
button.Font = 'Code'
button.TextSize = 12

local buttonCorner = Instance.new("UICorner")
buttonCorner.CornerRadius = UDim.new(0, 8)
buttonCorner.Parent = button

button.MouseButton1Click:Connect(function()
    game:GetService("VirtualInputManager"):SendKeyEvent(true, "F9" , false , game)
end)

local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/ionlyusegithubformcmods/1-Line-Scripts/main/Mobile%20Friendly%20Orion')))()

local Window = OrionLib:MakeWindow({Name = "Public bathroom Hub", HidePremium = true, IntroEnabled = false, SaveConfig = false, ConfigFolder = "OrionTest"})

local Tab = Window:MakeTab({
	Name = "Main",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

Tab:AddDropdown({
	Name = "Multi items",
	Default = "Multi roll",
	Options = {"Multi Roll", "Multi Burger", "Multi Pizza", "Multi Taco", "Multi Coffee", "Multi Soda", "Multi Spray Bottle","Multi Mop","Multi Soap","Multi Newspaper","Multi Cheese","Multi TrashCola"},
	Callback = function(Value)
		if Value == "Multi Roll" then
		local LP = game.Players.LocalPlayer
repeat wait() until LP.Character
for i,v in pairs(LP.Backpack:GetChildren()) do
   if v.Name == "TpRoll" then
       v.Parent = LP.Character
   end
end
while true do
   wait()
   for i,v in pairs (LP.Character:GetChildren()) do
       if v.Name == "TpRoll" then
           v:Activate()
       end
   end
end
end
      if Value == "Multi Burger" then
      local LP = game.Players.LocalPlayer
repeat wait() until LP.Character
for i,v in pairs(LP.Backpack:GetChildren()) do
   if v.Name == "Burger" then
       v.Parent = LP.Character
   end
end
while true do
   wait(1)
   for i,v in pairs (LP.Character:GetChildren()) do
       if v.Name == "Burger" then
           v:Activate()
       end
   end
end
end
      if Value == "Multi Pizza" then
      local LP = game.Players.LocalPlayer
repeat wait() until LP.Character
for i,v in pairs(LP.Backpack:GetChildren()) do
   if v.Name == "Pizza" then
       v.Parent = LP.Character
   end
end
while true do
   wait(1)
   for i,v in pairs (LP.Character:GetChildren()) do
       if v.Name == "Pizza" then
           v:Activate()
       end
   end
end
end
     if Value == "Multi Taco" then
      local LP = game.Players.LocalPlayer
repeat wait() until LP.Character
for i,v in pairs(LP.Backpack:GetChildren()) do
   if v.Name == "TacoWithFoil" then
       v.Parent = LP.Character
   end
end
while true do
   wait(1)
   for i,v in pairs (LP.Character:GetChildren()) do
       if v.Name == "TacoWithFoil" then
           v:Activate()
       end
   end
end
end
     if Value == "Multi Coffee" then
     local LP = game.Players.LocalPlayer
repeat wait() until LP.Character
for i,v in pairs(LP.Backpack:GetChildren()) do
   if v.Name == "Coffee" then
       v.Parent = LP.Character
   end
end
while true do
   wait(1)
   for i,v in pairs (LP.Character:GetChildren()) do
       if v.Name == "Coffee" then
           v:Activate()
       end
   end
end
end
      if Value == "Multi Soda" then
      local LP = game.Players.LocalPlayer
repeat wait() until LP.Character
for i,v in pairs(LP.Backpack:GetChildren()) do
   if v.Name == "Soda" then
       v.Parent = LP.Character
   end
end
while true do
   wait(1)
   for i,v in pairs (LP.Character:GetChildren()) do
       if v.Name == "Soda" then
           v:Activate()
       end
   end
end
end
      if Value == "Multi Spray Bottle" then
      local LP = game.Players.LocalPlayer
repeat wait() until LP.Character
for i,v in pairs(LP.Backpack:GetChildren()) do
   if v.Name == "SprayBottle" then
       v.Parent = LP.Character
   end
end
while true do
   wait(0.1)
   for i,v in pairs (LP.Character:GetChildren()) do
       if v.Name == "SprayBottle" then
           v:Activate()
       end
   end
end
end
if Value == "Multi Mop" then
local LP = game.Players.LocalPlayer
repeat wait() until LP.Character
for i,v in pairs(LP.Backpack:GetChildren()) do
   if v.Name == "Mop" then
       v.Parent = LP.Character
   end
end
while true do
   wait()
   for i,v in pairs (LP.Character:GetChildren()) do
       if v.Name == "Mop" then
           v:Activate()
       end
   end
end
end
if Value == "Multi Soap" then
local LP = game.Players.LocalPlayer
repeat wait() until LP.Character
for i,v in pairs(LP.Backpack:GetChildren()) do
   if v.Name == "Soap" then
       v.Parent = LP.Character
   end
end
while true do
   wait()
   for i,v in pairs (LP.Character:GetChildren()) do
       if v.Name == "Soap" then
           v:Activate()
       end
   end
end
end
if Value == "Multi Newspaper" then
local LP = game.Players.LocalPlayer
repeat wait() until LP.Character
for i,v in pairs(LP.Backpack:GetChildren()) do
   if v.Name == "Newspaper" then
       v.Parent = LP.Character
   end
end
while true do
   wait()
   for i,v in pairs (LP.Character:GetChildren()) do
       if v.Name == "Newspaper" then
           v:Activate()
       end
   end
end
end
if Value == "Multi Cheese" then
local LP = game.Players.LocalPlayer
repeat wait() until LP.Character
for i,v in pairs(LP.Backpack:GetChildren()) do
   if v.Name == "Cheese" then
       v.Parent = LP.Character
   end
end
while true do
   wait()
   for i,v in pairs (LP.Character:GetChildren()) do
       if v.Name == "Cheese" then
           v:Activate()
       end
   end
end
end
   if Value == "Multi TrashCola" then
      local LP = game.Players.LocalPlayer
repeat wait() until LP.Character
for i,v in pairs(LP.Backpack:GetChildren()) do
   if v.Name == "TrashCola" then
       v.Parent = LP.Character
   end
end
while true do
   wait(1)
   for i,v in pairs (LP.Character:GetChildren()) do
       if v.Name == "TrashCola" then
           v:Activate()
       end
   end
end
end
	end    
})

Tab:AddDropdown({
	Name = "Multi gear",
	Default = "m",
	Options = {"Multi Roll (Press Z)", "Multi Soda (Press X)","Multi Burger (Press H)","Multi Pizza (Press J)","Multi Mop (Press R)","Multi Newspaper (Press O)","Multi gears (Press E)"},
	Callback = function(Value)
		if Value == "Multi Roll (Press Z)" then

end
        if Value == "Multi Roll (Press Z)" then
lp = game:GetService("Players").LocalPlayer

game:GetService("UserInputService").InputBegan:Connect(function(key)
    if key.KeyCode == Enum.KeyCode.Z then
        for i, tool in pairs(lp.Backpack:GetChildren()) do
            if tool:IsA("Tool") and tool.Name == "TpRoll" then
                tool.Parent = lp.Character
                tool:Activate()
                task.wait()
                tool.Parent = lp.Backpack
            end
        end
    end
end)
end
       if Value == "Multi Soda (Press X)" then
lp = game:GetService("Players").LocalPlayer

game:GetService("UserInputService").InputBegan:Connect(function(key)
    if key.KeyCode == Enum.KeyCode.X then
        for i, tool in pairs(lp.Backpack:GetChildren()) do
            if tool:IsA("Tool") and tool.Name == "Soda" then
                tool.Parent = lp.Character
                tool:Activate()
                task.wait()
                tool.Parent = lp.Backpack
            end
        end
    end
end)
end
      if Value == "Multi Burger (Press H)" then
lp = game:GetService("Players").LocalPlayer

game:GetService("UserInputService").InputBegan:Connect(function(key)
    if key.KeyCode == Enum.KeyCode.H then
        for i, tool in pairs(lp.Backpack:GetChildren()) do
            if tool:IsA("Tool") and tool.Name == "Burger" then
                tool.Parent = lp.Character
                tool:Activate()
                task.wait()
                tool.Parent = lp.Backpack
            end
        end
    end
end)
end
if Value == "Multi Pizza (Press J)" then
lp = game:GetService("Players").LocalPlayer

game:GetService("UserInputService").InputBegan:Connect(function(key)
    if key.KeyCode == Enum.KeyCode.J then
        for i, tool in pairs(lp.Backpack:GetChildren()) do
            if tool:IsA("Tool") and tool.Name == "Pizza" then
                tool.Parent = lp.Character
                tool:Activate()
                task.wait()
                tool.Parent = lp.Backpack
            end
        end
    end
end)
end
     if Value == "Multi Mop (Press R)" then
lp = game:GetService("Players").LocalPlayer

game:GetService("UserInputService").InputBegan:Connect(function(key)
    if key.KeyCode == Enum.KeyCode.R then
        for i, tool in pairs(lp.Backpack:GetChildren()) do
            if tool:IsA("Tool") and tool.Name == "Mop" then
                tool.Parent = lp.Character
                tool:Activate()
                task.wait()
                tool.Parent = lp.Backpack
            end
        end
    end
end)
end
     if Value == "Multi Newspaper (Press O)" then
lp = game:GetService("Players").LocalPlayer

game:GetService("UserInputService").InputBegan:Connect(function(key)
    if key.KeyCode == Enum.KeyCode.O then
        for i, tool in pairs(lp.Backpack:GetChildren()) do
            if tool:IsA("Tool") and tool.Name == "Newspaper" then
                tool.Parent = lp.Character
                tool:Activate()
                task.wait()
                tool.Parent = lp.Backpack
            end
        end
    end
end)
end
if Value == "Multi gears (Press E)" then
lp = game:GetService("Players").LocalPlayer

game:GetService("UserInputService").InputBegan:Connect(function(key)
	if key.KeyCode == Enum.KeyCode.E then
		for i,tool in pairs(lp.Backpack:GetChildren()) do
			if tool:IsA("Tool") then
				tool.Parent = lp.Character
				tool:Activate()
				task.wait()
				tool.Parent = lp.Backpack
			end
		end
	end
end)
end
	end    
})

Tab:AddDropdown({
	Name = "Tool parts giver",
	Default = "De",
	Options = {"Destroy parts", "Spin parts", "Wheel parts","Chaotic parts","Spasm parts"},
	Callback = function(Value)
		if Value == "Destroy parts" then
		local lp = game.Players.LocalPlayer
local mouse = lp:GetMouse()

local ft = Instance.new("Tool")
ft.Name = "Destroy parts"
ft.RequiresHandle = false
ft.Parent = lp.Backpack
ft.Activated:Connect(function()
 local obj = mouse.Target
 if obj:IsA("BasePart") or obj:IsA("Part") or obj:IsA("MeshPart") or obj:IsA("CornerWedgePart") or obj:IsA("TrussPart") or obj:IsA("WedgePart") then
  if not obj.Anchored then
      local bambam = Instance.new("BodyAngularVelocity")
      bambam.Name = "BAM BAM AHAHHAHAHHAHAH"
      bambam.Parent = obj
      bambam.AngularVelocity = Vector3.new(99999999,99999999,99999999)
      bambam.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
      bambam.P = math.huge
     end
 end
end)
		end
		if Value == "Spin parts" then
		local lp = game.Players.LocalPlayer
local mouse = lp:GetMouse()

local ft = Instance.new("Tool")
ft.Name = "Spin parts"
ft.RequiresHandle = false
ft.Parent = lp.Backpack
ft.Activated:Connect(function()
 local obj = mouse.Target
 if obj:IsA("BasePart") or obj:IsA("Part") or obj:IsA("MeshPart") or obj:IsA("CornerWedgePart") or obj:IsA("TrussPart") or obj:IsA("WedgePart") then
  if not obj.Anchored then
      local bambam = Instance.new("BodyAngularVelocity")
      bambam.Name = "BAM BAM AHAHHAHAHHAHAH"
      bambam.Parent = obj
      bambam.AngularVelocity = Vector3.new(0,26,0)
      bambam.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
      bambam.P = math.huge
     end
 end
end)
end
        if Value == "Wheel parts" then
        local lp = game.Players.LocalPlayer
local mouse = lp:GetMouse()

local ft = Instance.new("Tool")
ft.Name = "Wheel parts"
ft.RequiresHandle = false
ft.Parent = lp.Backpack
ft.Activated:Connect(function()
 local obj = mouse.Target
 if obj:IsA("BasePart") or obj:IsA("Part") or obj:IsA("MeshPart") or obj:IsA("CornerWedgePart") or obj:IsA("TrussPart") or obj:IsA("WedgePart") then
  if not obj.Anchored then
      local bambam = Instance.new("BodyAngularVelocity")
      bambam.Name = "BAM BAM AHAHHAHAHHAHAH"
      bambam.Parent = obj
      bambam.AngularVelocity = Vector3.new(1,1,6)
      bambam.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
      bambam.P = math.huge
     end
 end
end)
		end
if Value == "Chaotic parts" then
local lp = game.Players.LocalPlayer
local mouse = lp:GetMouse()

local ft = Instance.new("Tool")
ft.Name = "Chaotic parts"
ft.RequiresHandle = false
ft.Parent = lp.Backpack
ft.Activated:Connect(function()
 local obj = mouse.Target
 if obj:IsA("BasePart") or obj:IsA("Part") or obj:IsA("MeshPart") or obj:IsA("CornerWedgePart") or obj:IsA("TrussPart") or obj:IsA("WedgePart") then
  if not obj.Anchored then
      local bambam = Instance.new("BodyAngularVelocity")
      bambam.Name = "BAM BAM AHAHHAHAHHAHAH"
      bambam.Parent = obj
      bambam.AngularVelocity = Vector3.new(1,1,20)
      bambam.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
      bambam.P = math.huge
     end
 end
end)
end
if Value == "Spasm parts" then
local lp = game.Players.LocalPlayer
local mouse = lp:GetMouse()

local ft = Instance.new("Tool")
ft.Name = "Spasm parts"
ft.RequiresHandle = false
ft.Parent = lp.Backpack
ft.Activated:Connect(function()
 local obj = mouse.Target
 if obj:IsA("BasePart") or obj:IsA("Part") or obj:IsA("MeshPart") or obj:IsA("CornerWedgePart") or obj:IsA("TrussPart") or obj:IsA("WedgePart") then
  if not obj.Anchored then
      local bambam = Instance.new("BodyAngularVelocity")
      bambam.Name = "BAM BAM AHAHHAHAHHAHAH"
      bambam.Parent = obj
      bambam.AngularVelocity = Vector3.new(10,1,1)
      bambam.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
      bambam.P = math.huge
     end
 end
end)
end
	end
})

Tab:AddDropdown({
	Name = "Tools control",
	Default = "",
	Options = {"Equip tools", "Drop tools", "Delete tools", "Grab tools", "Copy tools", "Steal tools"},
	Callback = function(Value)
		if Value == "Equip tools" then
		for _, tool in ipairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
     if tool:IsA("Tool") then
          tool.Parent = game:GetService("Players").LocalPlayer.Character -- I didn't use Equip because the Equip function unequips any other tools in your character.
     end
 end
		end
		if Value == "Drop tools" then
		for i,v in pairs(game.Players.LocalPlayer.Backpack:GetDescendants()) do
   if v:IsA("Tool") then
    v.Parent = game.Players.LocalPlayer.Character
    v.Parent = game.Workspace
end
end
		end
		if Value == "Delete tools" then
		local Player = game:GetService("Players").LocalPlayer
local Backpack = Player.Backpack
local Character = Player.Character

for _,v in pairs(Backpack:GetChildren()) do
   if v:IsA("Tool") or v:IsA("HopperBin") then
       v:Destroy()
   end
end

for _,v in pairs(Character:GetChildren()) do
   if v:IsA("Tool") or v:IsA("HopperBin") then
       v:Destroy()
   end 
end
		end
		if Value == "Grab tools" then
		local debris = game:GetService("Workspace").Debris
		
while true do
  for i, v in pairs(debris:GetChildren()) do
    if v:IsA("BasePart") then
      local hum = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
      if hum then
        hum:MoveTo(v.Position)  
        wait(0.5) 
        fireclickdetector(v:FindFirstChildOfClass("ClickDetector")) 
        wait(0.5)
      end
    end
  end
  task.wait(1)
end
		end
if Value == "Copy tools" then
local player = game.Players.LocalPlayer
local backpack = player.Backpack
for _, tool in pairs(backpack:GetChildren()) do
  if tool:IsA("Tool") then
    local clone = tool:Clone()
    clone.Parent = backpack
    clone.Name = tool.Name.."_copy"
    clone.Changed:Connect(function()
      tool:SetAttribute(clone.Name, clone[clone.Name])
    end)
    tool.Changed:Connect(function()
      if clone[tool.Name] ~= nil then
        clone[tool.Name] = tool[tool.Name]  
      end
    end)
  end
end
end
if Value == "Steal tools" then
for i,v in pairs (game.Players:GetChildren()) do
wait()
for i,b in pairs (v.Backpack:GetChildren()) do
b.Parent = game.Players.LocalPlayer.Backpack
end
end
end
	end    
})

Tab:AddToggle({
 Name = "Spam sound",
 Default = fasle,
 Callback = function(Value)
  game:GetService("CoreGui").PurchasePrompt.Enabled = false
_G.Lag = Value
while _G.Lag do
for i,v in pairs(workspace:GetDescendants()) do
   if v:IsA("ClickDetector") then
    fireclickdetector(v)
   end
end
  wait(1)
  end
 end    
})

Tab:AddButton({
	Name = "Anti water",
	Callback = function()
		local player = game:GetService("Players").LocalPlayer
while task.wait() do
local parts = workspace:GetPartBoundsInRadius(player.Character:WaitForChild("HumanoidRootPart").Position, 10)
for _, part in ipairs(parts) do
part.CanTouch = fasle
end
end
	end    
})

Tab:AddButton({
 Name = "Telekinesis",
 Callback = function()
        loadstring(game:HttpGet(('https://raw.githubusercontent.com/SAZXHUB/Control-update/main/README.md'),true))()
   end    
})

Tab:AddButton({
 Name = "Flip player",
 Callback = function()
        local lp = game:GetService("Players").LocalPlayer
local c = lp.Character
local hrp0 = c:FindFirstChild("HumanoidRootPart")
local hrp1 = hrp0:Clone()
c.Parent = nil
hrp0.Parent = hrp1
hrp0.RootJoint.Part0 = nil
hrp1.Parent = c
c.Parent = workspace
local h = game:GetService("RunService").Heartbeat
hrp0.Transparency = 0.5
while h:Wait() and c and c.Parent do
    hrp0.CFrame = hrp1.CFrame
    hrp0.Orientation += Vector3.new(0, 0, 180)
    hrp0.Position -= Vector3.new(0, 1, 0)
    hrp0.Velocity = hrp1.Velocity
end
   end    
})

Tab:AddToggle({
	Name = "Bypass walkspeed",
	Default = false,
	Callback = function(Value)
getgenv().TpWalking = Value
getgenv().Speed = 2

local speaker = game:GetService("Players").LocalPlayer
local chr = speaker.Character
local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
local hb = game:GetService("RunService").Heartbeat
while getgenv().TpWalking and chr and hum and hum.Parent do
    local delta = hb:Wait()
    if hum.MoveDirection.Magnitude > 0 then
        chr:TranslateBy(hum.MoveDirection * tonumber(getgenv().Speed) * delta * 10)
    else
        chr:TranslateBy(hum.MoveDirection * delta * 100000)
    end
end
	end    
})

Tab:AddButton({
 Name = "Table spam",
 Callback = function()
        while true do
a = math.random(1, 11)
local args = {
    [1] = a
}

game:GetService("ReplicatedStorage"):WaitForChild("ChangeSign"):FireServer(unpack(args))
task.wait()
end
   end    
})

Tab:AddDropdown({
	Name = "Check inventory",
	Default = "",
	Options = {"Check items", "Check items v2"},
	Callback = function(Value)
		if Value == "Check items" then
		local Inventory = game:GetService("Players").LocalPlayer.Backpack:GetChildren()

local Burgers = 0
local Soda = 0
local Pizza = 0
local Coffee = 0
local TpRoll = 0

for i,v in pairs(Inventory) do
  if v.Name == "Burger" then
    Burgers = Burgers + 1
  end
end

for i,v in pairs(Inventory) do
  if v.Name == "Soda" then
    Soda = Soda + 1
  end
end

for i,v in pairs(Inventory) do
  if v.Name == "Pizza" then
    Pizza = Pizza + 1
  end
end

for i,v in pairs(Inventory) do
  if v.Name == "Coffee" then
    Coffee = Coffee + 1
  end
end

for i,v in pairs(Inventory) do
  if v.Name == "TpRoll" then
    TpRoll = TpRoll + 1
  end
end

print("You have " .. Burgers .. " Burgers")
print("You have " .. Soda .. " soda")
print("You have " .. Pizza .. " pizza")
print("You have " .. Coffee .. " coffee")
print("You have " .. TpRoll .. " toilet paper")
		end
		if Value == "Check items v2" then
		local Inventory = game:GetService("Players").LocalPlayer.Backpack:GetChildren()

local TotalItems = 0

for i,v in pairs(Inventory) do
  TotalItems = TotalItems + 1
end

print("You have " .. TotalItems .. " items")
		end
	end    
})

Tab:AddButton({
	Name = "Find an item with a name",
	Callback = function()
      		local player = game.Players.LocalPlayer
local function getCurrentItemInHand()
    if player.Character then
        -- Перебираем все объекты в руках персонажа
        for _, item in pairs(player.Character:GetChildren()) do
            if item:IsA("Tool") then
                return item.Name
            end
        end
    end
    return "No item in hand"
end

print(getCurrentItemInHand())
  	end    
})

Tab:AddTextbox({
	Name = "Get TrashCola",
	Default = "",
	TextDisappear = true,
	Callback = function(Value)
		for i = 1, Value do
fireclickdetector(game:GetService("Workspace")["Trash can"].Trash.Can.ClickDetector)
end
	end	  
})

Tab:AddButton({
	Name = "Walking tools",
	Callback = function()
      		loadstring(game:HttpGet("https://pastebin.com/raw/X43JasMm"))()
  	end    
})

Tab:AddToggle({
 Name = "Quickly sorting objects",
 Default = false,
 Callback = function(Value)
  local player = game.Players.LocalPlayer
Sorting = Value
while Sorting do
  for i, item in pairs(player.Backpack:GetChildren()) do
    if item:IsA("Tool") then
      player.Character.Humanoid:EquipTool(item)
      game:GetService("RunService").RenderStepped:wait()
      player.Character.Humanoid:UnequipTools()
    end
  end
  task.wait()
end
 end    
})

Tab:AddToggle({
 Name = "Quickly sorting objects v2",
 Default = fasle,
 Callback = function(Value)
SortingE = Value
while SortingE do
lp = game:GetService("Players").LocalPlayer
  for i,tool in pairs(lp.Backpack:GetChildren()) do
   if tool:IsA("Tool") then
    tool.Parent = lp.Character
    tool:Activate()
    task.wait()
    tool.Parent = lp.Backpack
   end
  end
end
   end    
})

Tab:AddButton({
 Name = "Audio stealer",
 Callback = function()
        loadstring(game:HttpGet("https://pastebin.com/raw/tj9B565T"))()
   end    
})

Tab:AddDropdown({
	Name = "Animations",
	Default = "",
	Options = {"Quick Bang", "Quick Dance", "Freeze Anims"},
	Callback = function(Value)
	if Value == "Quick Bang" then
	local Anim = Instance.new("Animation")
Anim.AnimationId = "rbxassetid://148840371"
local k = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(Anim)
k:Play()
k:AdjustSpeed(10)
	end
	if Value == "Quick Dance" then
	local Anim = Instance.new("Animation")
Anim.AnimationId = "rbxassetid://33796059"
local k = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(Anim)
k:Play()
k:AdjustSpeed(75)
	end
	if Value == "Freeze Animation" then
	local Anim = Instance.new("Animation")
Anim.AnimationId = "rbxassetid://181525546"
local k = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(Anim)
k:Play()
k:AdjustSpeed(0)
	end
	end    
})

Tab:AddDropdown({
	Name = "Parts control",
	Default = "",
	Options = {"Bring parts", "Heaven parts"},
	Callback = function(Value)
		if Value == "Bring parts" then
		local plr = game.Players.LocalPlayer
local char = plr.Character

game:GetService("RunService").Stepped:Connect(function()
  for i, v in pairs(workspace:GetDescendants()) do
    if v:IsA("BasePart") and v.Anchored == false then
      v.CFrame = char.Head.CFrame
    end
  end  
end)
		end
		if Value == "Heaven parts" then
		last_pick_sin_mrazy = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame 

local HEIGHT_OFFSET = 500

for _, object in ipairs(workspace:GetDescendants()) do
  if object:IsA("BasePart") and object.Anchored == false then
    local originalCFrame = object.CFrame
    object.CFrame = CFrame.new(originalCFrame.p.X, HEIGHT_OFFSET, originalCFrame.p.Z) 
  end 
end

task.wait()

game. Players.LocalPlayer.Character.HumanoidRootPart.CFrame = last_pick_sin_mrazy
		end
	end    
})

local Tab = Window:MakeTab({
	Name = "Misc",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

Tab:AddButton({
	Name = "Touch all",
	Callback = function()
      		local plr = game.Players.LocalPlayer.Character.Head
for i, v in pairs(game:GetService("Workspace"):GetDescendants()) do
        if v.Name == "TouchInterest" and v.Parent then
        firetouchinterest(plr, v.Parent, 0)
    end
end
  	end    
})

Tab:AddToggle({
	Name = "Kill all NPCs",
	Default = false,
	Callback = function(Value)
		Kill = Value
while Kill do
sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", 112412400000)
sethiddenproperty(game.Players.LocalPlayer, "MaxSimulationRadius", 112412400000)
for i, d in pairs(game.Workspace:GetDescendants()) do
    if d.ClassName == 'Humanoid' and not game.Players:FindFirstChild(d.Parent.Name) then
        d.Health = 0
    end
end
task.wait(0.1)
end
	end    
})

Tab:AddToggle({
	Name = "Bring NPCs",
	Default = false,
	Callback = function(Value)
		local Players = game:GetService("Players")
local RunService = game:GetService("RunService") 

Bring = Value
while Bring do
  for i, player in ipairs(Players:GetPlayers()) do
    if player.Character then
      for i, model in ipairs(workspace:GetDescendants()) do
        if model:IsA("Model") and model:FindFirstChild("Humanoid") then
          model:MoveTo(player.Character.Head.Position)
        end
      end 
    end
  end
  RunService.Heartbeat:Wait()
end
	end    
})

Tab:AddDropdown({
	Name = "Enable",
	Default = "E",
	Options = {"Enable reset", "Enable inventory", "Enable emotes", "Enable leaderboard", "Enable chat"},
	Callback = function(Value)
		if Value == "Enable reset" then
		local StarterGui = game:GetService("StarterGui")
StarterGui:SetCore("ResetButtonCallback",true)
end
       if Value == "Enable inventory" then
local StarterGui = game:GetService("StarterGui")
StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
end
      if Value == "Enable emotes" then
      game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.EmotesMenu, false)
      end
      if Value == "Enable leaderboard" then
      sgui = game:GetService("StarterGui")
sgui:SetCoreGuiEnabled(Enum.CoreGuiType.PlayerList, true)
end
      if Value == "Enable chat" then
      local sgui = game:GetService("StarterGui")
sgui:SetCoreGuiEnabled(Enum.CoreGuiType.Chat, true)
end
	end    
})

Tab:AddButton({
	Name = "Cbring",
	Callback = function()
      		local plr = game:GetService("Players").LocalPlayer
for i,v in pairs(game:GetService("Players"):GetChildren()) do
    if v.ClassName == "Player" and v.Name ~= plr.Name then
        if v.Character:FindFirstChild("HumanoidRootPart") then
            v.Character.HumanoidRootPart.CFrame = CFrame.new(plr.Character.HumanoidRootPart.Position)
        end
    end
end 
  	end    
})

Tab:AddToggle({
	Name = "Click all buttons",
	Default = false,
	Callback = function(Value)
		game:GetService("CoreGui").PurchasePrompt.Enabled = false
_G.Lag = Value
while _G.Lag do
for i,v in pairs(workspace:GetDescendants()) do
   if v:IsA("ClickDetector") then
    fireclickdetector(v)
   end
end
  wait(1)
  end
	end    
})

Tab:AddDropdown({
	Name = "Time set",
	Default = "s",
	Options = {"Day", "Night"},
	Callback = function(Value)
	       if Value == "Day" then
	game.Lighting.TimeOfDay = "12.00"
	end
	      if Value == "Night" then
	game.Lighting.TimeOfDay = "23.59"
	end
	end    
})

Tab:AddButton({
 Name = "Anti afk",
 Callback = function()
        loadstring(game:HttpGet("https://pastebin.com/raw/9QCyuc2p"))()
   end    
})
